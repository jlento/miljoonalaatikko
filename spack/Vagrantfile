# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #config.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/home_vagrant", "1"]
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "spack", "/home/vagrant/spack"
  config.vm.synced_folder "csc-spack-settings", "/home/vagrant/csc-spack-settings"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
     cp handle-prompt.sh /etc/profile.d/03-handle-prompt.sh
     cp spack.sh /etc/profile.d/02-spack.sh
     cp modulepath.sh /etc/profile.d/01-modulepath.sh
     yum install -y epel-release
     yum update -y
     yum --enablerepo epel groupinstall -y "Development Tools"
     yum --enablerepo epel install -y                                  \
          curl findutils gcc-c++ gcc gcc-gfortran git gnupg2 hostname  \
          iproute make patch openssh-server python python-pip tcl      \
          pciutils-devel libpciaccess-devel help2man sqlite-devel      \
          gdbm-devel hwloc-devel zlib-devel readline-devel Lmod        \
          autogen-libopts openssl-devel libcurl-devel gnutls-devel     \
          tcl-devel ncurses-devel pcre-devel perl-libintl patchelf     \
          vim libstdc++-static
     rm -rf /var/cache/yum
     yum clean all
     mkdir -p /appl/spack
     mkdir -p /appl/spack/run/source
     mkdir -p /appl/spack/run/stage
     mkdir -p /appl/spack/run/modulefiles
     mkdir -p /appl/modulefiles/linux-centos7-x86_64/Core
     mkdir -p /appl/modulefiles/linux-centos7-x86_64/Linux
     chmod -R 777 /appl/spack
     chmod -R 777 /appl/spack/run/source
     chmod -R 777 /appl/spack/run/stage
     chmod -R 777 /appl/spack/run/modulefiles
     chmod -R 777 /appl/modulefiles/linux-centos7-x86_64/Core
     chmod -R 777 /appl/modulefiles/linux-centos7-x86_64/Linux
  SHELL
end
